1 ОПИС АРХІТЕКТУРИ СИСТЕМИ

Адміністратор керує басейном. Створює його та видаляє. Схвалює або відхиляє запити на вступ до неї. Користувач здає виміри своїх показників (вага, зріст, ...) та отримує згенеровані рекомендації згідно
цих показників

2 ПОБУДОВА ДІАГРАМИ РОЗГОРТАННЯ (рисунок у звіті на платформі DL)

Сервер спілкується з браузером через HTTPS, з базою даних через TCP/IP, з розумним пристроєм та мобільною програмою через HTTPS

3 ОПИС АРХІТЕКТУРИ СЕРВЕРНОЇ ЧАСТИНИ

Clean Architecture з використанням патернів CQRS та Vertical Slices за допомогою патерну Mediator

4 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ (рисунок у звіті на платформі DL)

Адміністратор керує басейнами та клієнтами. Клієнт реєструється, зараховується у басейни, здає виміри, отримує рекомендації         

5 ПОБУДОВА ER-ДІАГРАМИ (рисунок у звіті на платформі DL)

У базі даних наявні наступні зв’язки між сутностями:
тип члену басейну та вимірів мають зв’язок один до багатьох, бо член
басейну може мати багато вимірів;
тип члену басейну та користувача мають зв’язок один до одного, бо
до одного користувача може бути «прив’язаний» лише один член
басейну;
тип члену басейну та заяви на вступ до басейну мають зв’язок один
до багатьох, бо один член басейну може подати багато заявок на
вступ;
тип басейну і члена басейну мають зв’язок один до багатьох, бо у
одного басейну може бути багато членів;
тип басейну та заяви на вступ до басейну мають зв’язок один до
багатьох, бо один басейн може мати багато заявок на вступ;

6 СПЕЦИФІКАЦІЯ REST (таблиця у звіті на платформі DL)

/auth/login Звичайний
користувач
POST Вхід за
обліком
записом

/auth/registration Звичайний
користувач
POST Створення
облікового
запису клієнта

/auth/validateToken Звичайний
користувач
POST Перевірка JWT
токену

/poolEnrollments/getAll Адміністратор GET Отримання
усіх заявок на
запис у басейн

/poolEnrollments/
getAllByMember
Член басейну GET Отримання
власних заявок
на записи у
басейн

/poolEnrollments Член басейну POST Створити нову
заявку на
запис

/poolEnrollments/{id} Адміністратор DELETE Видалення заяви
на запис у
басейн за
ідентифікатором

/pools/getAll Адміністратор
та член
басейну
GET Отримання усіх
басейнів

/pools/getByMember Член басейну GET Отримання
басейну члену

/pools/{id} Адміністратор DELETE Видалення
басейну

/pools Адміністратор PUT Оновити дані
басейну

/pools Адміністратор POST Створити басейн

/measurements/getById{id} Адміністратор GET Отримати вимір
за
ідентифікатором

/measurements/
getAllByMember
Член басейну GET Отримати
виміри за
членом басейну

/measurements Член басейну POST Cтворити новий
вимір

/measurements/deleteById Адміністратор DELETE Видалення
виміру за
ідентифікатором

/measurements/
deleteByIdForMember
Користувач DELETE Видалення
виміру за
ідентифікатором
за членом

/members/getByIdentity/{id} Адміністратор GET Отримати
інформацію про
члена басейну за
ідентифікатором
користувача

/members/getByUser Член басейну GET Отримати
інформації про
члена басейну за
поточним
користувачем

/members/getAll Адміністратор GET Отримати усіх
членів басейну

/members/changeEmail Адміністратор
та член
басейну
PUT Змінити
електрону
адресу
користувача

/members/changePassword Адміністратор
та член
басейну
PUT Змінити пароль
користувача

/members/enrollToPool Адміністратор PUT Записати члена у
басейн

/members/updateInfo Член басейну PUT Оновити дані
користувача

/members/leaveFromPool Член басейну PUT Вийти з басейну

/members/deleteUser/{id} Адміністратор DELETE Видалити
користувача

/recommendations/
getByLatestMeasurementByMe
mber
Член басейну GET Отримати
рекомендації за
останнім
виміром
користувача

/recommendations/
getBySpecificMeasurementBy
Member/{id}
Член басейну GET Отримати
рекомендації за
певним виміром
користувача

/data/exportData Адміністратор GET Експортувати
дані

7 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ (рисунок у звіті на платформі DL)

Використовується з додатком такі бібліотеки, як FluentValidator, AutoMapper, EF Core та Identity.
У додаток входять підходи Controllers, Commands and Queries, Migrations, Repositories

ВИСНОВКИ

У ході виконання лабораторної роботи були отримані навички з
проектування серверної частини програмної системи, розробки сценаріїв
використання, діаграм розгортання та пакетів, проектуванні бази даних. Була
розроблена програмна реалізація серверної частини програмної системи. При
розробці продукту дотримувались вимоги до чистого коду мови
програмування C# та платформи .NET
